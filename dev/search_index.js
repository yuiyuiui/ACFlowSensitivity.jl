var documenterSearchIndex = {"docs":
[{"location":"#ACFlowSensitivity","page":"Home","title":"ACFlowSensitivity","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for ACFlowSensitivity.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#ACFlowSensitivity.LMOptimizationResults","page":"Home","title":"ACFlowSensitivity.LMOptimizationResults","text":"LMOptimizationResults{T,N}\n\nIt is used to save the optimization results of the levenberg_marquardt algorithm.\n\nMembers\n\nx₀         -> Initial guess for the solution.\nminimizer  -> Final results for the solution.\nminimum    -> Residual.\niterations -> Number of iterations.\nxconv      -> If the convergence criterion 1 is satisfied.\ngconv      -> If the convergence criterion 2 is satisfied.\n\n\n\n\n\n","category":"type"},{"location":"#ACFlowSensitivity.LsqFitResult","page":"Home","title":"ACFlowSensitivity.LsqFitResult","text":"LsqFitResult\n\nIt encapsulates the results for curve fitting.\n\nMembers\n\nparam     -> Fitted results, i.e, the fitting parameters.\nresid     -> Residuals.\njacobian  -> Jacobian matrix.\nconverged -> If the curve-fitting algorithm is converged.\n\n\n\n\n\n","category":"type"},{"location":"#ACFlowSensitivity.OnceDifferentiable","page":"Home","title":"ACFlowSensitivity.OnceDifferentiable","text":"OnceDifferentiable\n\nMutable struct. It is used for objectives and solvers where the gradient is available/exists.\n\nMembers\n\nℱ! -> Objective. It is actually a function call and return objective.\n𝒥! -> It is a function call as well and returns jacobian of objective.\n𝐹  -> Cache for ℱ! output.\n𝐽  -> Cache for 𝒥! output.\n\n\n\n\n\n","category":"type"},{"location":"#ACFlowSensitivity.OnceDifferentiable-Tuple{Any, AbstractArray, AbstractArray}","page":"Home","title":"ACFlowSensitivity.OnceDifferentiable","text":"OnceDifferentiable(𝑓, p0::AbstractArray, 𝐹::AbstractArray)\n\nConstructor for OnceDifferentiable struct. 𝑓 is the function, p0 is the inital guess, 𝐹 = 𝑓(p0) is the cache for 𝑓's output.\n\n\n\n\n\n","category":"method"},{"location":"#ACFlowSensitivity.curve_fit-Tuple{Any, AbstractArray, AbstractArray, AbstractArray}","page":"Home","title":"ACFlowSensitivity.curve_fit","text":"curve_fit(model, x, y, p0)\n\nFit data to a non-linear model. p0 is an initial model parameter guess. The return object is a composite type (LsqFitResult).\n\nSee also: LsqFitResult.\n\n\n\n\n\n","category":"method"},{"location":"#ACFlowSensitivity.jacobian!-Tuple{ACFlowSensitivity.OnceDifferentiable, Any}","page":"Home","title":"ACFlowSensitivity.jacobian!","text":"jacobian!(obj::OnceDifferentiable, x)\n\nReturn jacobian. obj.𝐽 will be updated and returned.\n\n\n\n\n\n","category":"method"},{"location":"#ACFlowSensitivity.jacobian-Tuple{ACFlowSensitivity.OnceDifferentiable}","page":"Home","title":"ACFlowSensitivity.jacobian","text":"jacobian(obj::OnceDifferentiable)\n\nReturn obj.𝐽. obj will not be affected.\n\n\n\n\n\n","category":"method"},{"location":"#ACFlowSensitivity.levenberg_marquardt-Tuple{ACFlowSensitivity.OnceDifferentiable, AbstractVector}","page":"Home","title":"ACFlowSensitivity.levenberg_marquardt","text":"levenberg_marquardt(df::OnceDifferentiable, x₀::AbstractVector{T})\n\nReturns the argmin over x of sum(f(x).^2) using the Levenberg-Marquardt algorithm. The function f is encoded in df. x₀ is an initial guess for the solution.\n\nSee also: OnceDifferentiable.\n\n\n\n\n\n","category":"method"},{"location":"#ACFlowSensitivity.value!-Tuple{ACFlowSensitivity.OnceDifferentiable, Any}","page":"Home","title":"ACFlowSensitivity.value!","text":"value!(obj::OnceDifferentiable, x)\n\nReturn 𝑓(x). obj.𝐹 will be updated and returned.\n\n\n\n\n\n","category":"method"},{"location":"#ACFlowSensitivity.value-Tuple{ACFlowSensitivity.OnceDifferentiable, Any, Any}","page":"Home","title":"ACFlowSensitivity.value","text":"value(obj::OnceDifferentiable, 𝐹, x)\n\nReturn 𝑓(x). obj will not be affected, but 𝐹 is updated.\n\n\n\n\n\n","category":"method"},{"location":"#ACFlowSensitivity.value-Tuple{ACFlowSensitivity.OnceDifferentiable}","page":"Home","title":"ACFlowSensitivity.value","text":"value(obj::OnceDifferentiable)\n\nReturn obj.𝐹. obj will not be affected.\n\n\n\n\n\n","category":"method"}]
}
